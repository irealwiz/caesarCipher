ИС Дракон © Тышов Г.Н. A
2,,,,,01.01.2015,"Tahoma,1,10,0,0",10,,"COPYING,,""DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS LICENSE MESSAGE."",,""This file is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version."",,""This file is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details."",,""You should have received a copy of the GNU Lesser General Public License version 3 along with this file. If not, see <https://www.gnu.org/licenses/>."",,""Copyright (C) 2024 Sergey Shpagin""",,
0,1,10,,,,,Публичный
4,2,300,135,-90,-15,90,15,2,4,,,encrypt,,"Предусловия:,""* Открытый текст существует. Не проверяется явно."",""* Каждый символ открытого текста входит в выбранный алфавит. Проверяется всегда.""","""Шифрование строки."",,""Метод зашифровывает шифром Цезаря указанную строку символов и возвращает результат шифрования.""","Исключения:,""* Null pointer exception - Если указанная строка не существует."",""* Illegal argument exception - Если любой из символов указанной строки не входит в выбранный алфавит. "",,Постусловия:,""* Сформирован и возвращён шифротекст.""",0,
5,3,300,555,-60,-15,60,15,,,,,Конец,,,"""Возвращаем строковое представление шифротекста.""",,0,
24,4,450,135,-30,-15,90,15,,,,,агрументы,,,"Аргументы:,""* Шифруемая строка символов.""",,0,
25,5,90,135,-30,-15,90,15,0,,,,результат,,,"Результат:,""* Зашифрованная строка символов."",,Исключения:,""* Null pointer exception - Если указанная строка не существует."",""* Illegal argument exception - Если любой из символов указанной строки не входит в выбранный алфавит.""",,0,
6,6,300,195,-90,-15,90,15,,5,,,Подготовка,,,"Подготовка:,""* Запоминаем первый символ алфавита."",""* Запоминаем размер алфавита."",""* Получаем размер открытого текста."",""* Размещаем пустой шифротекст.""",,0,
16,7,300,255,-90,-15,90,15,,7,,,Символы,,,"""Обрабатываем символы открытого текста.""",,0,
17,8,300,495,-90,-15,90,15,,1,,,Символы,,,,,0,
6,9,300,315,-90,-15,90,15,,8,,,Символ,,,"""Получаем очередной символ открытого текста.""",,0,
6,10,300,375,-90,-15,90,15,,9,,,Предусловия,,,"""Проверяем предусловия:"",""* Каждый символ открытого текста входит в выбранный алфавит. Проверяется всегда.""",,0,
6,11,300,435,-90,-15,90,15,,6,,,Шифрование,,,"Шифрование:,""* Вычисляем индекс исходного символа в алфавите, учитывая пересечение границы типа char."",""* Вычисляем индекс зашифрованного символа в кольцевом алфавите."",""* Получаем зашифрованный символ."",""* Присоединяем полученный символ к шифротексту.""",,0,
0,12,10,,,,,Публичный
4,13,870,135,-90,-15,90,15,2,4,,,decrypt,,"Предусловия:,""* Шифротекст существует. Не проверяется явно."",""* Каждый символ шифротекста входит в выбранный алфавит. Проверяется всегда.""","""Расшифровывание строки."",,""Метод расшифровывает строку, зашифрованную шифром Цезаря и возвращает полученный открытый текст.""","Исключения:,""* Null pointer exception - Если указанная строка не существует."",""* Illegal argument exception - Если любой из символов указанной строки не входит в выбранный алфавит. "",,Постусловия:,""* Сформирован и возвращён открытый текст.""",0,
5,14,870,555,-60,-15,60,15,,,,,Конец,,,"""Возвращаем строковое представление открытого текста.""",,0,
24,15,1020,135,-30,-15,90,15,,,,,агрументы,,,"Аргументы:,""* Расшифровываемая строка символов.""",,0,
25,16,660,135,-30,-15,90,15,0,,,,результат,,,"Результат:,""* Открытый текст."",,Исключения:,""* Null pointer exception - Если указанная строка не существует."",""* Illegal argument exception - Если любой из символов указанной строки не входит в выбранный алфавит.""",,0,
6,17,870,195,-90,-15,90,15,,5,,,Подготовка,,,"Подготовка:,""* Запоминаем первый символ алфавита."",""* Запоминаем размер алфавита."",""* Получаем размер шифротекста."",""* Размещаем пустой контейнер открытого текста."",""* Вычисляем обратный сдвиг. При вычислении индекса расшифрованного символа, так как вычисления происходят в кольце, то, для избегания отрицательных чисел, мы можем не уменьшать индекс на значение сдвига, а увеличить на разность размера кольца, и значения сдвига. Вследствие того, что разность размера алфавита и величины сдвига, для экземпляра шифра Цезаря - величина постоянная, то разумно вынести её вычисление за пределы цикла расшифровывания.""",,0,
16,18,870,255,-90,-15,90,15,,7,,,Символы,,,"""Обрабатываем символы шифротекста.""",,0,
17,19,870,495,-90,-15,90,15,,1,,,Символы,,,,,0,
6,20,870,315,-90,-15,90,15,,8,,,Символ,,,"""Получаем очередной символ шифротекста.""",,0,
6,21,870,375,-90,-15,90,15,,9,,,Предусловия,,,"""Проверяем предусловия:"",""* Каждый символ шифротекста входит в выбранный алфавит. Проверяется всегда.""",,0,
6,22,870,435,-120,-15,120,15,,6,,,Расшифровывание,,,"Расшифровывание:,""* Вычисляем индекс зашифрованного символа в алфавите, учитывая пересечение границы типа char."",""* Вычисляем индекс расшифрованного символа в кольцевом алфавите."",""* Получаем расшифрованный символ."",""* Присоединяем полученный символ к открытому тексту.""",,0,
